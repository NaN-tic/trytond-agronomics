<tryton>
    <data>
        <!-- Product Template-->
        <record model="ir.ui.view" id="template_view_form">
            <field name="model">product.template</field>
            <field name="name">template_form</field>
            <field name="inherit" ref="product.template_view_form"/>
        </record>
        <record model="ir.ui.view" id="template_view_tree">
            <field name="model">product.template</field>
            <field name="name">template_list</field>
            <field name="inherit" ref="product.template_view_tree"/>
        </record>

        <!-- Product Variety-->
        <record model="ir.ui.view" id="product_variety_view_form">
            <field name="model">product.variety</field>
            <field name="type">form</field>
            <field name="name">product_variety_form</field>
        </record>
        <record model="ir.ui.view" id="product_variety_view_list">
            <field name="model">product.variety</field>
            <field name="type">tree</field>
            <field name="priority">10</field>
            <field name="name">product_variety_list</field>
        </record>

        <!-- Product Variant-->
        <record model="ir.ui.view" id="product_view_form">
            <field name="model">product.product</field>
            <field name="name">product_form</field>
            <field name="inherit" ref="product.product_view_form"/>
        </record>
        <record model="ir.ui.view" id="product_view_tree">
            <field name="model">product.product</field>
            <field name="name">product_list</field>
            <field name="inherit" ref="product.product_view_tree"/>
        </record>

        <record model="ir.action.act_window" id="act_product_quality_test">
            <field name="name">Quality Test</field>
            <field name="res_model">quality.test</field>
            <field
                name="domain"
                eval="[If(Eval('active_ids', []) == [Eval('active_id')], ('document.id', '=', Eval('active_id'), 'product.product'), ('document.id', 'in', Eval('active_ids'), 'product.product'))]"
                pyson="1"/>
        </record>
        <record model="ir.action.keyword" id="act_product_quality_test_keyword">
            <field name="keyword">form_relate</field>
            <field name="model">product.product,-1</field>
            <field name="action" ref="act_product_quality_test"/>
        </record>

        <record model="ir.action.act_window" id="act_product_quantitative_test_lines">
            <field name="name">Quantitative Lines</field>
            <field name="res_model">quality.quantitative.test.line</field>
            <field
                name="domain"
                eval="[If(Eval('active_ids', []) == [Eval('active_id')], ('product', '=', Eval('active_id')), ('product', 'in', Eval('active_ids')))]"
                pyson="1"/>
        </record>
        <record model="ir.action.keyword" id="act_product_quantitative_test_lines_keyword">
            <field name="keyword">form_relate</field>
            <field name="model">product.product,-1</field>
            <field name="action" ref="act_product_quantitative_test_lines"/>
        </record>

        <record model="ir.action.act_window" id="act_product_qualitative_test_lines">
            <field name="name">Qualitative Lines</field>
            <field name="res_model">quality.qualitative.test.line</field>
            <field
                name="domain"
                eval="[If(Eval('active_ids', []) == [Eval('active_id')], ('product', '=', Eval('active_id')), ('product', 'in', Eval('active_ids')))]"
                pyson="1"/>
        </record>
        <record model="ir.action.keyword" id="act_product_qualitative_test_lines_keyword">
            <field name="keyword">form_relate</field>
            <field name="model">product.product,-1</field>
            <field name="action" ref="act_product_qualitative_test_lines"/>
        </record>

        <!-- Certification -->
        <record model="ir.ui.view" id="certification_view_form">
            <field name="model">agronomics.certification</field>
            <field name="type">form</field>
            <field name="name">certification_form</field>
        </record>
        <record model="ir.ui.view" id="certification_view_tree">
            <field name="model">agronomics.certification</field>
            <field name="type">tree</field>
            <field name="priority" eval="20"/>
            <field name="name">certification_list</field>
        </record>

        <record model="ir.action.act_window" id="act_certification_tree">
            <field name="name">Certification</field>
            <field name="res_model">agronomics.certification</field>
        </record>

        <record model="ir.action.act_window.view" id="act_certification_tree_view">
            <field name="sequence" eval="10"/>
            <field name="view" ref="certification_view_tree"/>
            <field name="act_window" ref="act_certification_tree"/>
        </record>
        <record model="ir.action.act_window.view" id="act_certification_form_view">
            <field name="sequence" eval="20"/>
            <field name="view" ref="certification_view_form"/>
            <field name="act_window" ref="act_certification_tree"/>
        </record>

        <menuitem parent="menu_agronomics" sequence="1"
            action="act_certification_tree" id="menu_certification_list"/>
        <record model="ir.ui.menu-res.group"
                id="menu_certification_list_group_agronomics">
            <field name="menu" ref="menu_certification_list"/>
            <field name="group" ref="group_agronomics"/>
        </record>
        <record model="ir.ui.menu-res.group"
                id="menu_certification_list_group_agronomics_admin">
            <field name="menu" ref="menu_certification_list"/>
            <field name="group" ref="group_agronomics_admin"/>
        </record>

        <!-- Container -->
        <record model="ir.ui.view" id="container_view_form">
            <field name="model">agronomics.container</field>
            <field name="type">form</field>
            <field name="name">container_form</field>
        </record>
        <record model="ir.ui.view" id="container_view_tree">
            <field name="model">agronomics.container</field>
            <field name="type">tree</field>
            <field name="priority" eval="20"/>
            <field name="name">container_list</field>
        </record>

        <record model="ir.action.act_window" id="act_container_tree">
            <field name="name">Container</field>
            <field name="res_model">agronomics.container</field>
        </record>

        <record model="ir.action.act_window.view" id="act_container_tree_view">
            <field name="sequence" eval="10"/>
            <field name="view" ref="container_view_tree"/>
            <field name="act_window" ref="act_container_tree"/>
        </record>
        <record model="ir.action.act_window.view" id="act_container_form_view">
            <field name="sequence" eval="20"/>
            <field name="view" ref="container_view_form"/>
            <field name="act_window" ref="act_container_tree"/>
        </record>

        <menuitem parent="menu_agronomics" sequence="1"
            action="act_container_tree" id="menu_container_list"/>
        <record model="ir.ui.menu-res.group"
                id="menu_container_list_group_agronomics">
            <field name="menu" ref="menu_container_list"/>
            <field name="group" ref="group_agronomics"/>
        </record>
        <record model="ir.ui.menu-res.group"
                id="menu_container_list_group_agronomics_admin">
            <field name="menu" ref="menu_container_list"/>
            <field name="group" ref="group_agronomics_admin"/>
        </record>

        <record model="ir.model.access" id="access_certification">
            <field name="model" search="[('model', '=', 'agronomics.certification')]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_delete" eval="False"/>
        </record>
         <record model="ir.model.access" id="access_certification_agronomics_admin">
            <field name="model" search="[('model', '=', 'agronomics.certification')]"/>
            <field name="group" ref="agronomics.group_agronomics_admin"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>
         <record model="ir.model.access" id="access_certification_product_admin">
            <field name="model" search="[('model', '=', 'agronomics.certification')]"/>
            <field name="group" ref="product.group_product_admin"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>

        <record model="ir.model.access" id="access_container">
            <field name="model" search="[('model', '=', 'agronomics.container')]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_delete" eval="False"/>
        </record>
        <record model="ir.model.access" id="access_container_agronomics_admin">
            <field name="model" search="[('model', '=', 'agronomics.container')]"/>
            <field name="group" ref="agronomics.group_agronomics_admin"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>
        <record model="ir.model.access" id="access_container_product_admin">
            <field name="model" search="[('model', '=', 'agronomics.container')]"/>
            <field name="group" ref="product.group_product_admin"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>
    </data>
</tryton>
